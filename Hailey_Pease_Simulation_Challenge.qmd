---
title: "Simulation Challenge"
author: "Hailey Pease"
format: html
execute:
  echo: true
  eval: true
---

# Investment Game Simulation Analysis

## Question 1: Expected Value Analysis

Let's calculate the expected value of your account balance after 1 coin flip for the original game.

**Original Game Rules:**
- Start with $1,000
- Heads: increase balance by 50% (multiply by 1.5)
- Tails: reduce balance by 40% (multiply by 0.6)
- Probability of heads = 0.5, tails = 0.5

```{r}
# Expected value calculation after 1 coin flip
initial_balance <- 1000

# Possible outcomes after 1 flip
heads_outcome <- initial_balance * 1.5  # 50% gain
tails_outcome <- initial_balance * 0.6  # 40% loss

# Probabilities
prob_heads <- 0.5
prob_tails <- 0.5

# Expected value calculation
expected_value <- (prob_heads * heads_outcome) + (prob_tails * tails_outcome)

cat("Initial balance: $", format(initial_balance, big.mark = ","), "\n", sep = "")
cat("Balance after heads (50% gain): $", format(heads_outcome, big.mark = ","), "\n", sep = "")
cat("Balance after tails (40% loss): $", format(tails_outcome, big.mark = ","), "\n", sep = "")
cat("Expected value after 1 flip: $", format(expected_value, digits = 2, big.mark = ","), "\n", sep = "")
```

## Question 2: Expectation vs. Reality Analysis

```{r}
# Analysis of expectation vs. reality
change_from_initial <- expected_value - initial_balance
percentage_change <- (change_from_initial / initial_balance) * 100

cat("\nExpected value: $", format(expected_value, digits = 2, big.mark = ","), "\n", sep = "")
cat("Change from initial: $", format(change_from_initial, digits = 2, big.mark = ","), "\n", sep = "")
cat("Percentage change: ", format(percentage_change, digits = 2), "%\n", sep = "")

if (expected_value > initial_balance) {
  cat("The expected value is POSITIVE - we expect to gain money on average\n")
} else {
  cat("The expected value is NEGATIVE - we expect to lose money on average\n")
}

cat("\nBased on this result, we expect our account to be worth $", format(expected_value, digits = 2, big.mark = ","), "\n", sep = "")
if (change_from_initial > 0) {
  cat("This is $", format(abs(change_from_initial), digits = 2, big.mark = ","), " MORE than our initial $1,000\n", sep = "")
} else {
  cat("This is $", format(abs(change_from_initial), digits = 2, big.mark = ","), " LESS than our initial $1,000\n", sep = "")
}
```

## Question 3: Single Simulation with Time Series Plot

Now let's run a single simulation showing the dynamics of your account balance over time (from age 25 to 55, so 30 years).

```{r}
# Load required libraries
library(tidyverse)
library(ggplot2)

# Set seed for reproducibility
set.seed(123)

# Parameters
initial_balance <- 1000
years <- 30  # From age 25 to 55
ages <- 25:55  # Ages 25 through 55

# Simulate one path
simulate_investment_path <- function(initial, years) {
  balance <- initial
  path <- numeric(years + 1)
  path[1] <- initial
  
  for (year in 1:years) {
    coin_flip <- rbinom(1, 1, 0.5)
    if (coin_flip == 1) {
      balance <- balance * 1.5  # 50% gain
    } else {
      balance <- balance * 0.6  # 40% loss
    }
    path[year + 1] <- balance
  }
  
  return(path)
}

# Run single simulation
balance_path <- simulate_investment_path(initial_balance, years)

# Create DataFrame for plotting
simulation_data <- tibble(
  age = ages,
  balance = balance_path
)

# Expected value after 30 years
expected_after_30 <- initial_balance * ((1.5 * 0.5) + (0.6 * 0.5))^30

# Create time series plot using ggplot2
ggplot(simulation_data, aes(x = age, y = balance)) +
  geom_line(color = "darkblue", linewidth = 1.2) +
  geom_point(color = "darkblue", size = 2) +
  geom_hline(yintercept = initial_balance, color = "red", linetype = "dashed", 
             alpha = 0.7, linewidth = 1) +
  geom_hline(yintercept = expected_after_30, color = "green", linetype = "dotted", 
             alpha = 0.7, linewidth = 1) +
  labs(
    title = "Account Balance Over Time - Single Simulation",
    subtitle = "Investment Game from Age 25 to 55",
    x = "Age",
    y = "Account Balance ($)",
    caption = paste("Red line: Initial Balance ($", format(initial_balance, big.mark = ","), 
                   "), Green line: Expected Value After 30 Years ($", 
                   format(expected_after_30, digits = 0, big.mark = ","), ")", sep = "")
  ) +
  scale_y_continuous(labels = scales::dollar_format()) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 14, color = "gray50"),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10)
  ) +
  ylim(0, max(balance_path) * 1.1)

# Display the simulation results
cat("Single Simulation Results:\n")
cat("=" %R% 50, "\n")
cat("Initial balance (age 25): $", format(initial_balance, big.mark = ","), "\n", sep = "")
cat("Final balance (age 55): $", format(balance_path[length(balance_path)], digits = 2, big.mark = ","), "\n", sep = "")
cat("Total change: $", format(balance_path[length(balance_path)] - initial_balance, digits = 2, big.mark = ","), "\n", sep = "")
cat("Total return: ", format(((balance_path[length(balance_path)] / initial_balance) - 1) * 100, digits = 2), "%\n", sep = "")

# Count heads vs tails in this simulation
coin_flips <- character(years)
for (i in 1:years) {
  if (balance_path[i+1] / balance_path[i] == 1.5) {
    coin_flips[i] <- "Heads"
  } else {
    coin_flips[i] <- "Tails"
  }
}

heads_count <- sum(coin_flips == "Heads")
tails_count <- sum(coin_flips == "Tails")
cat("\nCoin flip results: ", heads_count, " heads, ", tails_count, " tails\n", sep = "")
cat("Heads percentage: ", format((heads_count/length(coin_flips))*100, digits = 1), "%\n", sep = "")
```

## Analysis of Single Simulation Results

```{r}
# Analysis and commentary on the single simulation
final_balance <- balance_path[length(balance_path)]

cat("\n", "=" %R% 60, "\n")
cat("ANALYSIS OF SINGLE SIMULATION\n")
cat("=" %R% 60, "\n")

cat("\nüéØ Key Results:\n")
cat("   ‚Ä¢ Started with: $", format(initial_balance, big.mark = ","), "\n", sep = "")
cat("   ‚Ä¢ Ended with: $", format(final_balance, digits = 2, big.mark = ","), "\n", sep = "")
cat("   ‚Ä¢ Net change: $", format(final_balance - initial_balance, digits = 2, big.mark = ","), "\n", sep = "")

if (final_balance > initial_balance) {
  cat("   ‚Ä¢ This simulation was PROFITABLE! üéâ\n")
  cat("   ‚Ä¢ You would be happy with this outcome\n")
} else {
  cat("   ‚Ä¢ This simulation resulted in a LOSS üòû\n")
  cat("   ‚Ä¢ You would NOT be happy with this outcome\n")
}

cat("\nüìä Performance Analysis:\n")
total_return <- ((final_balance / initial_balance) - 1) * 100
annualized_return <- (((final_balance / initial_balance) ^ (1/30)) - 1) * 100
cat("   ‚Ä¢ Total return: ", format(total_return, digits = 2), "%\n", sep = "")
cat("   ‚Ä¢ Annualized return: ", format(annualized_return, digits = 2), "%\n", sep = "")

cat("\nüé≤ Luck Factor:\n")
expected_heads <- years * 0.5
cat("   ‚Ä¢ Got ", heads_count, " heads out of ", years, " flips\n", sep = "")
cat("   ‚Ä¢ Expected heads: ", format(expected_heads, digits = 1), "\n", sep = "")
if (heads_count > expected_heads) {
  cat("   ‚Ä¢ You were LUCKY - got more heads than expected! üçÄ\n")
} else if (heads_count < expected_heads) {
  cat("   ‚Ä¢ You were UNLUCKY - got fewer heads than expected! üòî\n")
} else {
  cat("   ‚Ä¢ You got exactly the expected number of heads\n")
}

cat("\nüí° Key Insight:\n")
cat("   ‚Ä¢ Even though the expected value per flip is positive ($", format(expected_value, digits = 2, big.mark = ","), ")\n", sep = "")
cat("   ‚Ä¢ Individual outcomes can vary dramatically due to compounding\n")
cat("   ‚Ä¢ This single simulation shows the high variability possible\n")
cat("   ‚Ä¢ Multiple simulations would give a better picture of the true risk\n")
```

## Question 4: Multiple Simulations (100 simulations)

```{r}
# Set seed for reproducibility
set.seed(456)

# Parameters for multiple simulations
n_sims <- 100

# Function to simulate final balance only
simulate_final_balance <- function(initial, years) {
  balance <- initial
  for (year in 1:years) {
    coin_flip <- rbinom(1, 1, 0.5)
    if (coin_flip == 1) {
      balance <- balance * 1.5  # 50% gain
    } else {
      balance <- balance * 0.6  # 40% loss
    }
  }
  return(balance)
}

# Run 100 simulations
final_balances <- replicate(n_sims, simulate_final_balance(initial_balance, years))

# Create data frame for analysis
distribution_data <- tibble(
  sim_num = 1:n_sims,
  final_balance = final_balances
)

# Create histogram of final balances
ggplot(distribution_data, aes(x = final_balance)) +
  geom_histogram(bins = 20, fill = "plum", alpha = 0.8, color = "black") +
  geom_vline(xintercept = initial_balance, color = "red", linetype = "dashed", linewidth = 1.5) +
  geom_vline(xintercept = expected_after_30, color = "green", linetype = "dotted", linewidth = 1.5) +
  labs(
    title = "Distribution of Final Account Balances",
    subtitle = paste("100 Simulations,", years, "Years Each"),
    x = "Final Balance ($)",
    y = "Frequency",
    caption = paste("Red line: Initial Balance ($", format(initial_balance, big.mark = ","), 
                   "), Green line: Expected Value ($", 
                   format(expected_after_30, digits = 0, big.mark = ","), ")", sep = "")
  ) +
  scale_x_continuous(labels = scales::dollar_format()) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 14, color = "gray50"),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10)
  )

# Summary statistics
summary_stats <- distribution_data %>%
  summarise(
    mean_balance = mean(final_balance),
    median_balance = median(final_balance),
    min_balance = min(final_balance),
    max_balance = max(final_balance),
    prob_above_initial = mean(final_balance > initial_balance),
    prob_above_10000 = mean(final_balance > 10000)
  )

cat("Summary Statistics for 100 Simulations:\n")
cat("=" %R% 50, "\n")
cat("Mean final balance: $", format(summary_stats$mean_balance, digits = 2, big.mark = ","), "\n", sep = "")
cat("Median final balance: $", format(summary_stats$median_balance, digits = 2, big.mark = ","), "\n", sep = "")
cat("Minimum final balance: $", format(summary_stats$min_balance, digits = 2, big.mark = ","), "\n", sep = "")
cat("Maximum final balance: $", format(summary_stats$max_balance, digits = 2, big.mark = ","), "\n", sep = "")
cat("Probability above initial ($1,000): ", format(summary_stats$prob_above_initial, digits = 3), " (", format(summary_stats$prob_above_initial * 100, digits = 1), "%)\n", sep = "")
cat("Probability above $10,000: ", format(summary_stats$prob_above_10000, digits = 3), " (", format(summary_stats$prob_above_10000 * 100, digits = 1), "%)\n", sep = "")

# Analysis
cat("\nüìä Analysis of 100 Simulations:\n")
if (summary_stats$prob_above_initial > 0.5) {
  cat("   ‚Ä¢ You would be happy with ", format(summary_stats$prob_above_initial * 100, digits = 1), "% of outcomes\n", sep = "")
} else {
  cat("   ‚Ä¢ You would NOT be happy with ", format((1 - summary_stats$prob_above_initial) * 100, digits = 1), "% of outcomes\n", sep = "")
}

if (summary_stats$median_balance > initial_balance) {
  cat("   ‚Ä¢ The median outcome is profitable\n")
} else {
  cat("   ‚Ä¢ The median outcome results in a loss\n")
}

cat("   ‚Ä¢ There's huge variability: from $", format(summary_stats$min_balance, digits = 0, big.mark = ","), 
    " to $", format(summary_stats$max_balance, digits = 0, big.mark = ","), "\n", sep = "")
```

## Question 5: Probability Analysis

```{r}
# Probability analysis based on 100 simulations
prob_above_1000 <- summary_stats$prob_above_initial

cat("\n", "=" %R% 60, "\n")
cat("PROBABILITY ANALYSIS - ORIGINAL STRATEGY\n")
cat("=" %R% 60, "\n")

cat("\nüéØ Key Probability Results:\n")
cat("   ‚Ä¢ Probability that balance > $1,000 at age 55: ", format(prob_above_1000, digits = 3), 
    " (", format(prob_above_1000 * 100, digits = 1), "%)\n", sep = "")
cat("   ‚Ä¢ Probability that balance ‚â§ $1,000 at age 55: ", format(1 - prob_above_1000, digits = 3), 
    " (", format((1 - prob_above_1000) * 100, digits = 1), "%)\n", sep = "")

cat("\nüí° Interpretation:\n")
if (prob_above_1000 > 0.5) {
  cat("   ‚Ä¢ You have a BETTER than 50% chance of ending up with more than you started!\n")
  cat("   ‚Ä¢ This suggests the strategy is favorable in the long run\n")
} else {
  cat("   ‚Ä¢ You have a LESS than 50% chance of ending up with more than you started!\n")
  cat("   ‚Ä¢ This suggests the strategy is unfavorable in the long run\n")
}

# Count how many simulations were above/below initial
above_1000_count <- sum(final_balances > initial_balance)
below_1000_count <- sum(final_balances <= initial_balance)

cat("\nüìà Detailed Breakdown:\n")
cat("   ‚Ä¢ ", above_1000_count, " out of ", n_sims, " simulations ended above $1,000\n", sep = "")
cat("   ‚Ä¢ ", below_1000_count, " out of ", n_sims, " simulations ended at or below $1,000\n", sep = "")
```

## Question 6: Strategy Comparison - Modified Game

Now let's analyze the modified game strategy where you bet exactly 50% of your account balance each round.

**Modified Game Rules:**
- Start with $1,000
- Must bet exactly 50% of current balance each round
- Heads: increase your bet by 50% (add 50% of bet to balance)
- Tails: reduce your bet by 40% (subtract 40% of bet from balance)
- Play for 30 years (age 25 to 55)

```{r}
# Set seed for reproducibility
set.seed(789)

# Function to simulate modified game
simulate_modified_game <- function(initial, years) {
  balance <- initial
  for (year in 1:years) {
    bet_amount <- balance * 0.5  # Bet exactly 50% of balance
    coin_flip <- rbinom(1, 1, 0.5)
    if (coin_flip == 1) {
      # Heads: increase bet by 50%
      balance <- balance + (bet_amount * 0.5)
    } else {
      # Tails: reduce bet by 40%
      balance <- balance - (bet_amount * 0.4)
    }
  }
  return(balance)
}

# Run 100 simulations for modified game
modified_final_balances <- replicate(n_sims, simulate_modified_game(initial_balance, years))

# Create data frame for modified game
modified_distribution_data <- tibble(
  sim_num = 1:n_sims,
  final_balance = modified_final_balances
)

# Summary statistics for modified game
modified_summary_stats <- modified_distribution_data %>%
  summarise(
    mean_balance = mean(final_balance),
    median_balance = median(final_balance),
    min_balance = min(final_balance),
    max_balance = max(final_balance),
    prob_above_initial = mean(final_balance > initial_balance),
    prob_above_10000 = mean(final_balance > 10000)
  )

cat("\n", "=" %R% 60, "\n")
cat("MODIFIED GAME STRATEGY RESULTS\n")
cat("=" %R% 60, "\n")

cat("Summary Statistics for Modified Game (100 Simulations):\n")
cat("Mean final balance: $", format(modified_summary_stats$mean_balance, digits = 2, big.mark = ","), "\n", sep = "")
cat("Median final balance: $", format(modified_summary_stats$median_balance, digits = 2, big.mark = ","), "\n", sep = "")
cat("Minimum final balance: $", format(modified_summary_stats$min_balance, digits = 2, big.mark = ","), "\n", sep = "")
cat("Maximum final balance: $", format(modified_summary_stats$max_balance, digits = 2, big.mark = ","), "\n", sep = "")
cat("Probability above initial ($1,000): ", format(modified_summary_stats$prob_above_initial, digits = 3), 
    " (", format(modified_summary_stats$prob_above_initial * 100, digits = 1), "%)\n", sep = "")
cat("Probability above $10,000: ", format(modified_summary_stats$prob_above_10000, digits = 3), 
    " (", format(modified_summary_stats$prob_above_10000 * 100, digits = 1), "%)\n", sep = "")

# Strategy Comparison
cat("\n", "=" %R% 60, "\n")
cat("STRATEGY COMPARISON ANALYSIS\n")
cat("=" %R% 60, "\n")

cat("\nüéØ Key Comparison Results:\n")
cat("   ‚Ä¢ Original Strategy - Probability above $10,000: ", format(summary_stats$prob_above_10000, digits = 3), 
    " (", format(summary_stats$prob_above_10000 * 100, digits = 1), "%)\n", sep = "")
cat("   ‚Ä¢ Modified Strategy - Probability above $10,000: ", format(modified_summary_stats$prob_above_10000, digits = 3), 
    " (", format(modified_summary_stats$prob_above_10000 * 100, digits = 1), "%)\n", sep = "")

if (modified_summary_stats$prob_above_10000 > summary_stats$prob_above_10000) {
  cat("   ‚Ä¢ The MODIFIED strategy has a HIGHER probability of reaching $10,000! üéâ\n")
} else if (modified_summary_stats$prob_above_10000 < summary_stats$prob_above_10000) {
  cat("   ‚Ä¢ The ORIGINAL strategy has a HIGHER probability of reaching $10,000! üéØ\n")
} else {
  cat("   ‚Ä¢ Both strategies have the SAME probability of reaching $10,000! ü§î\n")
}

difference <- modified_summary_stats$prob_above_10000 - summary_stats$prob_above_10000
cat("   ‚Ä¢ Difference: ", format(difference, digits = 3), " (", format(difference * 100, digits = 1), "%)\n", sep = "")

cat("\nüí° Strategic Insights:\n")
if (modified_summary_stats$mean_balance > summary_stats$mean_balance) {
  cat("   ‚Ä¢ Modified strategy has higher average returns\n")
} else {
  cat("   ‚Ä¢ Original strategy has higher average returns\n")
}

if (modified_summary_stats$median_balance > summary_stats$median_balance) {
  cat("   ‚Ä¢ Modified strategy has higher median returns\n")
} else {
  cat("   ‚Ä¢ Original strategy has higher median returns\n")
}

cat("   ‚Ä¢ Modified strategy range: $", format(modified_summary_stats$min_balance, digits = 0, big.mark = ","), 
    " to $", format(modified_summary_stats$max_balance, digits = 0, big.mark = ","), "\n", sep = "")
cat("   ‚Ä¢ Original strategy range: $", format(summary_stats$min_balance, digits = 0, big.mark = ","), 
    " to $", format(summary_stats$max_balance, digits = 0, big.mark = ","), "\n", sep = "")

# Create comparison plot
comparison_data <- tibble(
  strategy = rep(c("Original", "Modified"), each = n_sims),
  final_balance = c(final_balances, modified_final_balances)
)

ggplot(comparison_data, aes(x = final_balance, fill = strategy)) +
  geom_histogram(alpha = 0.7, position = "identity", bins = 20) +
  geom_vline(xintercept = 10000, color = "red", linetype = "dashed", linewidth = 1.5) +
  labs(
    title = "Strategy Comparison: Final Balance Distributions",
    subtitle = "100 Simulations Each - Original vs Modified Game",
    x = "Final Balance ($)",
    y = "Frequency",
    fill = "Strategy",
    caption = "Red line: $10,000 threshold"
  ) +
  scale_x_continuous(labels = scales::dollar_format()) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    plot.subtitle = element_text(size = 14, color = "gray50"),
    axis.title = element_text(size = 12),
    axis.text = element_text(size = 10),
    legend.position = "bottom"
  ) +
  facet_wrap(~strategy, ncol = 1, scales = "free_y")
```

## Final Analysis and Recommendations

```{r}
cat("\n", "=" %R% 70, "\n")
cat("FINAL ANALYSIS AND RECOMMENDATIONS\n")
cat("=" %R% 70, "\n")

cat("\nüé≤ Key Findings:\n")
cat("1. Expected value per flip is positive ($", format(expected_value, digits = 2, big.mark = ","), ")\n", sep = "")
cat("2. Original strategy: ", format(summary_stats$prob_above_10000 * 100, digits = 1), "% chance of reaching $10,000\n", sep = "")
cat("3. Modified strategy: ", format(modified_summary_stats$prob_above_10000 * 100, digits = 1), "% chance of reaching $10,000\n", sep = "")

if (modified_summary_stats$prob_above_10000 > summary_stats$prob_above_10000) {
  cat("4. The MODIFIED strategy is better for reaching $10,000\n")
} else {
  cat("4. The ORIGINAL strategy is better for reaching $10,000\n")
}

cat("\nüí° Investment Implications:\n")
cat("   ‚Ä¢ Both strategies show the power of compounding over time\n")
cat("   ‚Ä¢ High variability means outcomes can be dramatically different\n")
cat("   ‚Ä¢ The 'safer' modified strategy (betting only 50%) may actually be riskier\n")
cat("   ‚Ä¢ Individual luck plays a huge role in short-term outcomes\n")
cat("   ‚Ä¢ Multiple simulations reveal the true risk profile\n")

cat("\nüéØ Recommendation for a 25-year-old:\n")
if (modified_summary_stats$prob_above_10000 > summary_stats$prob_above_10000) {
  cat("   Consider the MODIFIED strategy for higher probability of reaching $10,000\n")
} else {
  cat("   Consider the ORIGINAL strategy for higher probability of reaching $10,000\n")
}

cat("   However, remember that past performance doesn't guarantee future results!\n")
cat("   Diversification and professional financial advice are always recommended.\n")
```

